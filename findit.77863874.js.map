{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortby","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","showMessage","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","querySelector","remove","truncateString","text","limit","shortened","indexOf","substring","addEventListener","e","preventDefault","value","sortBy","results","output","forEach","post","image","preview","images","source","url","title","selftext","subreddit","score","innerHTML"],"mappings":";AAAc,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACVA,OAAO,SAASC,EAAWC,EAAYC,GAC5BC,OAAAA,MAA6CH,uCAAAA,OAAAA,EAAmBE,UAAAA,OAAAA,EAAgBD,WAAAA,OAAAA,IACtFG,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAAAG,GAAQA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAAAF,GAAQA,OAAAA,EAAKA,SACjDG,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,OALpB,QAAA,QAAA;;AC2Fb,aA3FD,IAAA,EAAA,EAAA,QAAA,gBA2FC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAzFD,IAAMG,EAAaC,SAASC,eAAe,eACrCC,EAAcF,SAASC,eAAe,gBA2D5C,SAASE,EAAYC,EAAQC,GAEnBC,IAAAA,EAAMN,SAASO,cAAc,OAGnCD,EAAID,UAAqBA,SAAAA,OAAAA,GAGzBC,EAAIE,YAAYR,SAASS,eAAeL,IAGlCM,IAAAA,EAAkBV,SAASC,eAAe,oBAE1CjB,EAASgB,SAASC,eAAe,UAGvCS,EAAgBC,aAAaL,EAAItB,GAGjC4B,WAAW,WACPZ,SAASa,cAAc,UAAUC,UACnC,KAIN,SAASC,EAAeC,EAAKC,GACvBC,IAAAA,EAAYF,EAAKG,QAAQ,IAAIF,GAChCC,OAAc,GAAdA,EAAwBF,EACpBA,EAAKI,UAAU,EAAEF,GApFxBnB,EAAWsB,iBAAiB,SAAS,SAAAC,GACjCA,EAAEC,iBAGItC,IAAAA,EAAaiB,EAAYsB,MAGzBC,EAASzB,SAASa,cAAc,gCAAgCW,MAGhEtC,EAAcc,SAASC,eAAe,SAASuB,MAGnC,KAAfvC,GAECkB,EAAY,2BAA2B,gBAIxCD,EAAYsB,MAAQ,GAGhBxC,EAAAA,QAAAA,OAAOC,EAAWC,EAAYuC,GAChCpC,KAAK,SAAAqC,GACF7B,QAAQC,IAAI4B,GACRC,IAAAA,EAAS,6BAEbD,EAAQE,QAAQ,SAAAC,GAERC,IAAAA,EAAQD,EAAKE,QACfF,EAAKE,QAAQC,OAAO,GAAGC,OAAOC,IAC9B,sEAEFP,GAEiCG,6FAAAA,OAAAA,EAEND,+GAAAA,OAAAA,EAAKM,MACPpB,kDAAAA,OAAAA,EAAec,EAAKO,SAAU,KAC1CP,qCAAAA,OAAAA,EAAKK,IAGiCL,0KAAAA,OAAAA,EAAKQ,UACdR,sEAAAA,OAAAA,EAAKS,MAV/C,6EAgBJX,GAAU,SACV3B,SAASC,eAAe,WAAWsC,UAAYZ","file":"findit.77863874.js","sourceRoot":"..","sourcesContent":["export default{\r\n    search:function(searchTerm,searchLimit,sortby){\r\n        return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortby}&limit=${searchLimit}`)\r\n        .then(res => res.json())\r\n        .then(data => data.data.children.map(data => data.data))\r\n        .catch(err => console.log(err))\r\n    }\r\n};","import reddit from './redditapi';\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst searchInput = document.getElementById('search-input');\r\n\r\n//Form Event Listeners\r\nsearchForm.addEventListener('submit',e =>{\r\n    e.preventDefault();\r\n    \r\n    //Get search term\r\n    const searchTerm = searchInput.value;\r\n\r\n    //Get sort\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n\r\n    //Get limit\r\n    const searchLimit = document.getElementById('limit').value;\r\n   \r\n    //check input\r\n    if(searchTerm === ''){\r\n        //show Message\r\n        showMessage('Please add a search term','alert-danger');\r\n    }\r\n\r\n       //clear value Inputs\r\n       searchInput.value = '';\r\n\r\n    //Search Reddit\r\n    reddit.search(searchTerm,searchLimit,sortBy)\r\n        .then(results => {\r\n            console.log(results)\r\n            let output = '<div class=\"card-columns\">';\r\n            //Loop through posts\r\n            results.forEach(post =>{\r\n                \r\n                let image = post.preview\r\n                ? post.preview.images[0].source.url\r\n                : 'https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg';\r\n\r\n                output +=  `\r\n                <div class=\"card mb-2\">\r\n                <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">${post.title}</h5>\r\n                  <p class=\"card-text\">${truncateString(post.selftext, 100)}</p>\r\n                  <a href=\"${post.url}\" target=\"_blank\r\n                  \" class=\"btn btn-primary\">Read More</a>\r\n                  <hr>\r\n                  <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span> \r\n                  <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n                </div>\r\n              </div>\r\n                `\r\n            })\r\n\r\n            output += '</div>';\r\n            document.getElementById('results').innerHTML = output;\r\n        })\r\n\r\n})\r\n\r\n//Show Message \r\nfunction showMessage(message,className){\r\n    //Create a div\r\n    const div = document.createElement('div');\r\n\r\n    //Add Classes\r\n    div.className = `alert ${className}`;\r\n\r\n    //Add text\r\n    div.appendChild(document.createTextNode(message));\r\n\r\n    //Get parent\r\n    const searchContainer = document.getElementById('search-container');\r\n    //Get Search\r\n    const search = document.getElementById('search');\r\n\r\n    //Insert Before\r\n    searchContainer.insertBefore(div,search);\r\n\r\n    //Timeout alert\r\n    setTimeout(() =>{\r\n        document.querySelector('.alert').remove();\r\n    },3000)\r\n}\r\n\r\n//Truncate string\r\nfunction truncateString(text,limit){\r\nconst shortened = text.indexOf(' ',limit);\r\nif(shortened == -1) return text\r\nreturn text.substring(0,shortened)\r\n}\r\n"]}